--- a/cxx/isce3/io/IH5Dataset.cpp
+++ b/cxx/isce3/io/IH5Dataset.cpp
@@ -381,34 +381,6 @@ void * IH5Dataset::GetInternalHandle(const char *)
      return _dataset;
 }
 
-#if GDAL_VERSION_MAJOR == 2
-const char *IH5Dataset::GetProjectionRef()
-#elif GDAL_VERSION_MAJOR == 3
-const char *IH5Dataset::_GetProjectionRef()
-#endif
-{
-    if( pszProjection == nullptr )
-        return "";
-
-    return pszProjection;
-}
-
-/************************************************************************/
-/*                           SetProjection()                            */
-/************************************************************************/
-
-#if GDAL_VERSION_MAJOR == 2
-CPLErr IH5Dataset::SetProjection( const char *pszProjectionIn )
-#elif GDAL_VERSION_MAJOR == 3
-CPLErr IH5Dataset::_SetProjection( const char *pszProjectionIn)
-#endif
-{
-    CPLFree( pszProjection );
-    pszProjection = CPLStrdup( pszProjectionIn );
-
-    return CE_None;
-}
-
 /************************************************************************/
 /*                          GetGeoTransform()                           */
 /************************************************************************/
@@ -446,18 +418,6 @@ int IH5Dataset::GetGCPCount()
     //Get dimensions and fill the sizes
 }
 
-/************************************************************************/
-/*                          GetGCPProjection()                          */
-/************************************************************************/
-#if GDAL_VERSION_MAJOR == 2
-const char *IH5Dataset::GetGCPProjection()
-#elif GDAL_VERSION_MAJOR == 3
-const char *IH5Dataset::_GetGCPProjection()
-#endif
-{
-    return pszGCPProjection;
-}
-
 /************************************************************************/
 /*                              GetGCPs()                               */
 /************************************************************************/
@@ -467,31 +427,6 @@ const GDAL_GCP *IH5Dataset::GetGCPs()
     return pasGCPList;
 }
 
-/************************************************************************/
-/*                              SetGCPs()                               */
-/************************************************************************/
-#if GDAL_VERSION_MAJOR == 2
-CPLErr IH5Dataset::SetGCPs( int nNewCount, const GDAL_GCP *pasNewGCPList,
-                            const char *inpGCPProjection )
-#elif GDAL_VERSION_MAJOR == 3
-CPLErr IH5Dataset::_SetGCPs( int nNewCount, const GDAL_GCP *pasNewGCPList,
-                            const char *inpGCPProjection )
-#endif
-{
-    GDALDeinitGCPs( nGCPCount, pasGCPList );
-    CPLFree( pasGCPList );
-
-    if( inpGCPProjection == nullptr )
-        pszGCPProjection = CPLStrdup("");
-    else
-        pszGCPProjection = inpGCPProjection;
-
-    nGCPCount = nNewCount;
-    pasGCPList = GDALDuplicateGCPs( nGCPCount, pasNewGCPList );
-
-    return CE_None;
-}
-
 /************************************************************************/
 /*                  IH5GetNativeType()                                  */
 /************************************************************************/
--- a/cxx/isce3/io/IH5Dataset.h
+++ b/cxx/isce3/io/IH5Dataset.h
@@ -57,37 +57,6 @@ class IH5Dataset final: public GDALDataset
         /** Destructor */
         virtual ~IH5Dataset();
 
-#if GDAL_VERSION_MAJOR == 2
-        virtual const char *GetProjectionRef() override;
-        virtual CPLErr SetProjection( const char * ) override;
-        virtual const char *GetGCPProjection() override;
-        virtual CPLErr SetGCPs( int nGCPCount, const GDAL_GCP *pasGCPList,
-                            const char *pszGCPProjection ) override;
-#elif GDAL_VERSION_MAJOR == 3
-        //https://github.com/OSGeo/gdal/blob/master/gdal/MIGRATION_GUIDE.TXT
-        const char *_GetProjectionRef() override;
-        const OGRSpatialReference* GetSpatialRef() const override {
-            return GetSpatialRefFromOldGetProjectionRef();
-        }
-
-        CPLErr _SetProjection( const char * ) override;
-        CPLErr SetSpatialRef(const OGRSpatialReference* poSRS) override {
-            return OldSetProjectionFromSetSpatialRef(poSRS);
-        }
-
-        const char* _GetGCPProjection() override;
-        const OGRSpatialReference* GetGCPSpatialRef() const override {
-            return GetGCPSpatialRefFromOldGetGCPProjection();
-        }
-
-        CPLErr _SetGCPs(int nGCPCount, const GDAL_GCP *pasGCPList, const char *pszGCPProjection) override;
-        using GDALDataset::SetGCPs;
-        CPLErr SetGCPs( int nGCPCount, const GDAL_GCP *pasGCPList,
-                    const OGRSpatialReference* poSRS ) override {
-            return OldSetGCPsFromNew(nGCPCount, pasGCPList, poSRS);
-        }
-#endif
-
         virtual int GetGCPCount() override;
         virtual const GDAL_GCP *GetGCPs() override;
 
