diff --git a/cxx/isce3/io/IH5.icc b/cxx/isce3/io/IH5.icc
index 95c8a93a1..cd9dec0df 100644
--- a/cxx/isce3/io/IH5.icc
+++ b/cxx/isce3/io/IH5.icc
@@ -9,7 +9,6 @@ using namespace H5;
 using DT = DataType;
 using PT = PredType;
 using namespace isce3::core;
-using namespace isce3::io;
 
 inline DT getH5StrType(size_t strlen) {
     // HDF5 doesn't seem to support zero-length strings.
--- a/cxx/isce3/cuda/geocode/Geocode.h
+++ b/cxx/isce3/cuda/geocode/Geocode.h
@@ -112,7 +112,7 @@ public:
             const std::vector<isce3::core::dataInterpMethod>& interp_methods,
             const std::vector<GDALDataType>& raster_datatypes,
             const std::vector<double>& invalid_values,
-            Raster& dem_raster,
+            isce3::io::Raster& dem_raster,
             const isce3::core::LUT2d<double>& hostNativeDoppler = {},
             const isce3::core::LUT2d<double>& hostAzTimeCorrection = {},
             const isce3::core::LUT2d<double>& hostSRangeCorrection = {},
@@ -211,7 +211,7 @@ private:
      *                                  portions of a swath
      */
     void setBlockRdrCoordGrid(const size_t block_number,
-            Raster& dem_raster,
+            isce3::io::Raster& dem_raster,
             const isce3::core::dataInterpMethod dem_interp_method,
             const isce3::cuda::container::RadarGeometry& dev_rdr_geom,
             const isce3::geometry::detail::Geo2RdrParams geo2rdr_params,
--- a/tests/cxx/isce3/geocode/geocodeCov.cpp
+++ b/tests/cxx/isce3/geocode/geocodeCov.cpp
@@ -280,7 +280,7 @@ TEST(GeocodeTest, TestGeocodeCov) {
                           epsgcode);
 
     // load complex raster X and Y as a raster vector
-    std::vector<Raster> slc_raster_xyVect = {isce3::io::Raster("xslc_rdr.bin"),
+    std::vector<isce3::io::Raster> slc_raster_xyVect = {isce3::io::Raster("xslc_rdr.bin"),
                                            isce3::io::Raster("yslc_rdr.bin")};
 
     isce3::io::Raster slc_raster_xy =
