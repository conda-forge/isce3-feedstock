{% set name = "isce3" %}
{% set version = "0.20.0" %}
{% set number = 1 %}
{% set isce3_proc_type = "cuda" if cuda_compiler_version != "None" else "cpu" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/isce-framework/isce3/archive/v{{ version }}.tar.gz
  sha256: d8c9b734e0e3b7ea1a5b27e0833e793c0f0b280386ddc69297ba86ad6de6b887
  patches:
    - lut2d-include.patch

build:
  number: {{ number }}
  skip: true  # [win or py<36]

test:
  requires:
    - cmake
  commands:
    - ctest --output-on-failure -E '(workflows.stage_dem|pybind.focus.presum)'
  imports:
    - isce3
    - nisar

outputs:
  # A meta-package to select CPU or GPU build for faiss.
  - name: {{ name|lower }}
    version: {{ version }}
    script: build-pkg.sh
    build:
      string: "py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ number }}_{{ isce3_proc_type }}"                                                  # [cuda_compiler_version == "None"]
      string: "py{{ CONDA_PY }}cuda{{ cuda_compiler_version|replace('.', '') }}h{{ PKG_HASH }}_{{ number }}_{{ isce3_proc_type }}"  # [cuda_compiler_version != "None"]
    requirements:
      build:
        - python                                 # [build_platform != target_platform]
        - cross-python_{{ target_platform }}     # [build_platform != target_platform]
        - numpy                                  # [build_platform != target_platform]
        - pybind11                               # [build_platform != target_platform]
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - {{ compiler('cuda') }}  # [cuda_compiler_version != "None"]
        - {{ stdlib('c') }}
        - cmake
        - ninja
      host:
        - eigen
        - fftw
        - gdal
        - gmock
        - gtest
        - hdf5
        - libgdal
        - numpy
        - pybind11
        - python
        - pyre >=1.12.1,<=1.13.0

        # Needed for ctests in build.sh
        - h5py
        - pytest
        - ruamel.yaml
        - scipy
        - shapely
        - yamale
      run:
        - backoff
        - gdal
        - h5py
        - llvm-openmp  # [osx]
        - {{ pin_compatible('numpy') }}
        - _openmp_mutex  # [not osx]
        - pyre >=1.12.1,<=1.13.0
        - python
        - ruamel.yaml
        - scipy
        - shapely
        - yamale

  - name: isce3-cpu
    build:
      skip: true  # [cuda_compiler_version != "None"]
    requirements:
      run:
        - isce3 ={{ version }}=*_cpu
    test:
      imports:
        - isce3

  - name: isce3-cuda
    build:
      skip: true  # [cuda_compiler_version == "None"]
    requirements:
      run:
        - isce3 ={{ version }}=*_cuda
    test:
      imports:
        - isce3
        - isce3.cuda

about:
  home: https://github.com/isce-framework/isce3
  license: Apache-2.0
  license_family: Apache
  license_file: LICENSE
  summary: The InSAR Scientific Computing Environment, version 3

  description: |
    The InSAR Scientific Computing Environment (ISCE) is an open source library
    for processing spaceborne and airborne Interferometric Synthetic Aperture
    Radar (InSAR) data.
    This project is a successor to the ISCE2 framework. It is a ground-up
    redesign focusing on improved modularity, documentation, and test-driven
    development.

  doc_url: https://isce-framework.github.io/isce3
  dev_url: https://github.com/isce-framework/isce3

extra:
  recipe-maintainers:
    - rtburns-jpl
